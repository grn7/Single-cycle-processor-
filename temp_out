#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2009.vpi";
S_000002072b8dca00 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_000002072b8e0350 .scope module, "tb_fibonacci_comprehensive" "tb_fibonacci_comprehensive" 3 3;
 .timescale -9 -12;
v000002072b942370_0 .var/2s "add_count", 31 0;
v000002072b942550_0 .var/2s "addi_count", 31 0;
v000002072b942b90_0 .var/2s "and_count", 31 0;
v000002072b942af0_0 .var/2s "beq_count", 31 0;
v000002072b942c30_0 .var "clk", 0 0;
v000002072b943630_0 .var/2s "correct_count", 31 0;
v000002072b942cd0_0 .var/2s "cycle_count", 31 0;
v000002072b9427d0_0 .net "debug_out", 63 0, L_000002072b8a18e0;  1 drivers
v000002072b943b30 .array "expected_fib", 9 0, 63 0;
v000002072b943db0_0 .var "fib_value", 63 0;
v000002072b942a50_0 .var/2s "load_count", 31 0;
v000002072b943d10_0 .var/2s "or_count", 31 0;
v000002072b9429b0_0 .var "rst", 0 0;
v000002072b942d70_0 .var/2s "store_count", 31 0;
v000002072b942410_0 .var/2s "sub_count", 31 0;
v000002072b942e10_0 .var/2s "total_instr", 31 0;
S_000002072b8e04e0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 103, 3 103 0, S_000002072b8e0350;
 .timescale -9 -12;
v000002072b8c8fa0_0 .var/2s "i", 31 0;
S_000002072b88b3f0 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 110, 3 110 0, S_000002072b8e0350;
 .timescale -9 -12;
v000002072b8c9d60_0 .var/2s "i", 31 0;
S_000002072b88b580 .scope function.str, "get_instr_type" "get_instr_type" 3 171, 3 171 0, S_000002072b8e0350;
 .timescale -9 -12;
; Variable get_instr_type is string return value of scope S_000002072b88b580
v000002072b8cabc0_0 .var "instr", 31 0;
TD_tb_fibonacci_comprehensive.get_instr_type ;
    %load/vec4 v000002072b8cabc0_0;
    %parti/s 7, 0, 2;
    %dup/vec4;
    %pushi/vec4 3, 0, 7;
    %cmp/u;
    %jmp/1 T_0.0, 6;
    %dup/vec4;
    %pushi/vec4 35, 0, 7;
    %cmp/u;
    %jmp/1 T_0.1, 6;
    %dup/vec4;
    %pushi/vec4 51, 0, 7;
    %cmp/u;
    %jmp/1 T_0.2, 6;
    %dup/vec4;
    %pushi/vec4 99, 0, 7;
    %cmp/u;
    %jmp/1 T_0.3, 6;
    %dup/vec4;
    %pushi/vec4 19, 0, 7;
    %cmp/u;
    %jmp/1 T_0.4, 6;
    %pushi/str "UNKNOWN";
    %ret/str 0; Assign to get_instr_type
    %jmp T_0.6;
T_0.0 ;
    %pushi/str "LD";
    %ret/str 0; Assign to get_instr_type
    %jmp T_0.6;
T_0.1 ;
    %pushi/str "SD";
    %ret/str 0; Assign to get_instr_type
    %jmp T_0.6;
T_0.2 ;
    %load/vec4 v000002072b8cabc0_0;
    %parti/s 3, 12, 5;
    %dup/vec4;
    %pushi/vec4 0, 0, 3;
    %cmp/u;
    %jmp/1 T_0.7, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 3;
    %cmp/u;
    %jmp/1 T_0.8, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 3;
    %cmp/u;
    %jmp/1 T_0.9, 6;
    %pushi/str "R-TYPE";
    %ret/str 0; Assign to get_instr_type
    %jmp T_0.11;
T_0.7 ;
    %load/vec4 v000002072b8cabc0_0;
    %parti/s 1, 30, 6;
    %flag_set/vec4 8;
    %jmp/0 T_0.12, 8;
    %pushi/vec4 5461314, 0, 24; draw_string_vec4
    %jmp/1 T_0.13, 8;
T_0.12 ; End of true expr.
    %pushi/vec4 4277316, 0, 24; draw_string_vec4
    %jmp/0 T_0.13, 8;
 ; End of false expr.
    %blend;
T_0.13;
    %pushv/str; Cast BOOL/LOGIC to string
    %ret/str 0; Assign to get_instr_type
    %jmp T_0.11;
T_0.8 ;
    %pushi/str "AND";
    %ret/str 0; Assign to get_instr_type
    %jmp T_0.11;
T_0.9 ;
    %pushi/str "OR";
    %ret/str 0; Assign to get_instr_type
    %jmp T_0.11;
T_0.11 ;
    %pop/vec4 1;
    %jmp T_0.6;
T_0.3 ;
    %pushi/str "BEQ";
    %ret/str 0; Assign to get_instr_type
    %jmp T_0.6;
T_0.4 ;
    %pushi/str "ADDI";
    %ret/str 0; Assign to get_instr_type
    %jmp T_0.6;
T_0.6 ;
    %pop/vec4 1;
    %end;
S_000002072b886f30 .scope module, "uut" "single_cycle_cpu" 3 28, 4 3 0, S_000002072b8e0350;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "rst";
    .port_info 2 /OUTPUT 64 "debug_out";
v000002072b9418a0_0 .net "alu_control", 2 0, v000002072b8ca6c0_0;  1 drivers
v000002072b941260_0 .net "alu_result", 63 0, v000002072b8c9ea0_0;  1 drivers
v000002072b941080_0 .net "alu_src", 0 0, v000002072b8c9040_0;  1 drivers
v000002072b941da0_0 .net "branch", 0 0, v000002072b8ca080_0;  1 drivers
v000002072b941120_0 .net "clk", 0 0, v000002072b942c30_0;  1 drivers
v000002072b941940_0 .net "debug_out", 63 0, L_000002072b8a18e0;  alias, 1 drivers
v000002072b9419e0_0 .net "imm", 63 0, L_000002072b943770;  1 drivers
v000002072b940400_0 .net "instruction", 31 0, L_000002072b943950;  1 drivers
v000002072b941ee0_0 .net "mem_read", 0 0, v000002072b8c9180_0;  1 drivers
v000002072b941f80_0 .net "mem_to_reg", 0 0, v000002072b8ca1c0_0;  1 drivers
v000002072b9400e0_0 .net "mem_write", 0 0, v000002072b8ca800_0;  1 drivers
v000002072b9404a0_0 .net "pc", 63 0, v000002072b941440_0;  1 drivers
v000002072b940540_0 .net "rd_addr", 4 0, L_000002072b99f8f0;  1 drivers
v000002072b942910_0 .net "read_data_memory", 63 0, L_000002072b99eb30;  1 drivers
v000002072b943e50_0 .net "reg_write", 0 0, v000002072b8c9220_0;  1 drivers
v000002072b942190_0 .net "rst", 0 0, v000002072b9429b0_0;  1 drivers
v000002072b942690_0 .net "write_data_memory", 63 0, L_000002072b8a1cd0;  1 drivers
v000002072b9438b0_0 .net "zero", 0 0, L_000002072b99ee50;  1 drivers
L_000002072b9431d0 .part v000002072b941440_0, 0, 32;
L_000002072b9424b0 .part L_000002072b943950, 0, 7;
L_000002072b99f350 .part L_000002072b943950, 12, 3;
L_000002072b99f990 .part L_000002072b943950, 25, 7;
L_000002072b99f710 .part v000002072b8c9ea0_0, 0, 32;
S_000002072b8870c0 .scope module, "cu_inst" "control_unit" 4 56, 5 2 0, S_000002072b886f30;
 .timescale 0 0;
    .port_info 0 /INPUT 7 "opcode";
    .port_info 1 /INPUT 3 "funct3";
    .port_info 2 /INPUT 7 "funct7";
    .port_info 3 /OUTPUT 3 "alu_control";
    .port_info 4 /OUTPUT 1 "reg_write";
    .port_info 5 /OUTPUT 1 "mem_read";
    .port_info 6 /OUTPUT 1 "mem_write";
    .port_info 7 /OUTPUT 1 "mem_to_reg";
    .port_info 8 /OUTPUT 1 "alu_src";
    .port_info 9 /OUTPUT 1 "branch";
v000002072b8ca6c0_0 .var "alu_control", 2 0;
v000002072b8c9040_0 .var "alu_src", 0 0;
v000002072b8ca080_0 .var "branch", 0 0;
v000002072b8c90e0_0 .net "funct3", 2 0, L_000002072b99f350;  1 drivers
v000002072b8ca760_0 .net "funct7", 6 0, L_000002072b99f990;  1 drivers
v000002072b8c9180_0 .var "mem_read", 0 0;
v000002072b8ca1c0_0 .var "mem_to_reg", 0 0;
v000002072b8ca800_0 .var "mem_write", 0 0;
v000002072b8c9e00_0 .net "opcode", 6 0, L_000002072b9424b0;  1 drivers
v000002072b8c9220_0 .var "reg_write", 0 0;
E_000002072b8da580 .event anyedge, v000002072b8c9e00_0, v000002072b8c90e0_0, v000002072b8ca760_0;
S_000002072b87af10 .scope module, "data_mem_inst" "data_mem" 4 74, 6 1 0, S_000002072b886f30;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "rst";
    .port_info 2 /INPUT 32 "addr";
    .port_info 3 /INPUT 64 "wr_data";
    .port_info 4 /INPUT 1 "wr_enable";
    .port_info 5 /INPUT 1 "rd_enable";
    .port_info 6 /OUTPUT 64 "rd_data";
P_000002072b886c80 .param/l "mem_size" 0 6 2, +C4<00000000000000000000000100000000>;
P_000002072b886cb8 .param/str "rom_file" 0 6 4, "programs/fibo_data.mem";
P_000002072b886cf0 .param/l "rom_size" 0 6 3, +C4<00000000000000000000000000000010>;
L_000002072b8a1480 .functor BUFZ 32, L_000002072b99f710, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_000002072b944268 .functor BUFT 1, C4<00000000000000000000000100000000>, C4<0>, C4<0>, C4<0>;
v000002072b8c9540_0 .net/2u *"_ivl_2", 31 0, L_000002072b944268;  1 drivers
v000002072b8c9cc0_0 .net *"_ivl_4", 0 0, L_000002072b99ffd0;  1 drivers
v000002072b8ca260_0 .net *"_ivl_6", 63 0, L_000002072b99f210;  1 drivers
L_000002072b9442b0 .functor BUFT 1, C4<0000000000000000000000000000000000000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v000002072b8ca120_0 .net/2u *"_ivl_8", 63 0, L_000002072b9442b0;  1 drivers
v000002072b8ca440_0 .net "addr", 31 0, L_000002072b99f710;  1 drivers
v000002072b8c9900_0 .net "clk", 0 0, v000002072b942c30_0;  alias, 1 drivers
v000002072b8caa80_0 .var/i "i", 31 0;
v000002072b8c9ae0_0 .net "mem_addr", 31 0, L_000002072b8a1480;  1 drivers
v000002072b8c9400 .array "memory_array", 255 0, 63 0;
v000002072b8c9680_0 .net "rd_data", 63 0, L_000002072b99eb30;  alias, 1 drivers
L_000002072b9442f8 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v000002072b8c9a40_0 .net "rd_enable", 0 0, L_000002072b9442f8;  1 drivers
v000002072b8ca4e0_0 .net "rst", 0 0, v000002072b9429b0_0;  alias, 1 drivers
v000002072b8c94a0_0 .net "wr_data", 63 0, L_000002072b8a1cd0;  alias, 1 drivers
v000002072b8ca8a0_0 .net "wr_enable", 0 0, v000002072b8ca800_0;  alias, 1 drivers
E_000002072b8da740 .event posedge, v000002072b8c9900_0;
L_000002072b99ffd0 .cmp/gt 32, L_000002072b944268, L_000002072b8a1480;
L_000002072b99f210 .array/port v000002072b8c9400, L_000002072b8a1480;
L_000002072b99eb30 .functor MUXZ 64, L_000002072b9442b0, L_000002072b99f210, L_000002072b99ffd0, C4<>;
S_000002072b87b0a0 .scope module, "dp_inst" "datapath" 4 85, 7 1 0, S_000002072b886f30;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "rst";
    .port_info 2 /INPUT 32 "instruction";
    .port_info 3 /INPUT 64 "read_data_memory";
    .port_info 4 /INPUT 64 "imm_ext";
    .port_info 5 /INPUT 3 "alu_control";
    .port_info 6 /INPUT 1 "reg_write";
    .port_info 7 /INPUT 1 "alu_src";
    .port_info 8 /INPUT 1 "mem_to_reg";
    .port_info 9 /OUTPUT 64 "alu_result";
    .port_info 10 /OUTPUT 64 "write_data_memory";
    .port_info 11 /OUTPUT 5 "rd_addr";
    .port_info 12 /OUTPUT 1 "zero";
    .port_info 13 /OUTPUT 64 "debug_out";
L_000002072b8a1cd0 .functor BUFZ 64, L_000002072b99ea90, C4<0000000000000000000000000000000000000000000000000000000000000000>, C4<0000000000000000000000000000000000000000000000000000000000000000>, C4<0000000000000000000000000000000000000000000000000000000000000000>;
v000002072b90bb60_0 .net "alu_b", 63 0, L_000002072b99f3f0;  1 drivers
v000002072b90bac0_0 .net "alu_control", 2 0, v000002072b8ca6c0_0;  alias, 1 drivers
v000002072b90cc40_0 .net "alu_result", 63 0, v000002072b8c9ea0_0;  alias, 1 drivers
v000002072b90bca0_0 .net "alu_src", 0 0, v000002072b8c9040_0;  alias, 1 drivers
v000002072b90bd40_0 .net "clk", 0 0, v000002072b942c30_0;  alias, 1 drivers
v000002072b90cb00_0 .net "debug_out", 63 0, L_000002072b8a18e0;  alias, 1 drivers
v000002072b90ce20_0 .net "imm_ext", 63 0, L_000002072b943770;  alias, 1 drivers
v000002072b90bde0_0 .net "instruction", 31 0, L_000002072b943950;  alias, 1 drivers
v000002072b90cce0_0 .net "mem_to_reg", 0 0, v000002072b8ca1c0_0;  alias, 1 drivers
v000002072b90be80_0 .net "rd_addr", 4 0, L_000002072b99f8f0;  alias, 1 drivers
v000002072b90c240_0 .net "read_data_memory", 63 0, L_000002072b99eb30;  alias, 1 drivers
v000002072b90b660_0 .net "reg_write", 0 0, v000002072b8c9220_0;  alias, 1 drivers
v000002072b90c420_0 .net "rs1", 4 0, L_000002072b99e1d0;  1 drivers
v000002072b90cba0_0 .net "rs1_data", 63 0, L_000002072b99fa30;  1 drivers
v000002072b90b2a0_0 .net "rs2", 4 0, L_000002072b99e8b0;  1 drivers
v000002072b90bfc0_0 .net "rs2_data", 63 0, L_000002072b99ea90;  1 drivers
v000002072b90b0c0_0 .net "rst", 0 0, v000002072b9429b0_0;  alias, 1 drivers
v000002072b90c4c0_0 .net "wb_data", 63 0, L_000002072b99ff30;  1 drivers
v000002072b90c560_0 .net "write_data_memory", 63 0, L_000002072b8a1cd0;  alias, 1 drivers
v000002072b90b3e0_0 .net "zero", 0 0, L_000002072b99ee50;  alias, 1 drivers
L_000002072b99e1d0 .part L_000002072b943950, 15, 5;
L_000002072b99e8b0 .part L_000002072b943950, 20, 5;
L_000002072b99f8f0 .part L_000002072b943950, 7, 5;
L_000002072b99f3f0 .functor MUXZ 64, L_000002072b99ea90, L_000002072b943770, v000002072b8c9040_0, C4<>;
L_000002072b99ff30 .functor MUXZ 64, v000002072b8c9ea0_0, L_000002072b99eb30, v000002072b8ca1c0_0, C4<>;
S_000002072b877290 .scope module, "alu_inst" "alu" 7 47, 8 3 0, S_000002072b87b0a0;
 .timescale 0 0;
    .port_info 0 /INPUT 64 "a";
    .port_info 1 /INPUT 64 "b";
    .port_info 2 /INPUT 3 "alu_control";
    .port_info 3 /OUTPUT 64 "result";
    .port_info 4 /OUTPUT 1 "zero";
L_000002072b9444f0 .functor BUFT 1, C4<0000000000000000000000000000000000000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v000002072b8c95e0_0 .net/2u *"_ivl_0", 63 0, L_000002072b9444f0;  1 drivers
v000002072b8c9720_0 .net "a", 63 0, L_000002072b99fa30;  alias, 1 drivers
v000002072b8c9b80_0 .net "alu_control", 2 0, v000002072b8ca6c0_0;  alias, 1 drivers
v000002072b8c9c20_0 .net "b", 63 0, L_000002072b99f3f0;  alias, 1 drivers
v000002072b8c9ea0_0 .var "result", 63 0;
v000002072b8ca300_0 .net "zero", 0 0, L_000002072b99ee50;  alias, 1 drivers
E_000002072b8da6c0 .event anyedge, v000002072b8ca6c0_0, v000002072b8c9720_0, v000002072b8c9c20_0;
L_000002072b99ee50 .cmp/eq 64, v000002072b8c9ea0_0, L_000002072b9444f0;
S_000002072b877420 .scope module, "rf" "reg_file" 7 30, 9 1 0, S_000002072b87b0a0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "rst";
    .port_info 2 /INPUT 5 "rd_addr1";
    .port_info 3 /OUTPUT 64 "rd_data1";
    .port_info 4 /INPUT 5 "rd_addr2";
    .port_info 5 /OUTPUT 64 "rd_data2";
    .port_info 6 /INPUT 5 "wr_addr";
    .port_info 7 /INPUT 64 "wr_data";
    .port_info 8 /INPUT 1 "wr_enable";
    .port_info 9 /OUTPUT 64 "debug_output";
v000002072b90b160_31 .array/port v000002072b90b160, 31;
L_000002072b8a18e0 .functor BUFZ 64, v000002072b90b160_31, C4<0000000000000000000000000000000000000000000000000000000000000000>, C4<0000000000000000000000000000000000000000000000000000000000000000>, C4<0000000000000000000000000000000000000000000000000000000000000000>;
L_000002072b944340 .functor BUFT 1, C4<00000>, C4<0>, C4<0>, C4<0>;
v000002072b8ca940_0 .net/2u *"_ivl_0", 4 0, L_000002072b944340;  1 drivers
L_000002072b9443d0 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
v000002072b8ca9e0_0 .net *"_ivl_11", 1 0, L_000002072b9443d0;  1 drivers
L_000002072b944418 .functor BUFT 1, C4<00000>, C4<0>, C4<0>, C4<0>;
v000002072b90b520_0 .net/2u *"_ivl_14", 4 0, L_000002072b944418;  1 drivers
v000002072b90b840_0 .net *"_ivl_16", 0 0, L_000002072b99e950;  1 drivers
L_000002072b944460 .functor BUFT 1, C4<0000000000000000000000000000000000000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v000002072b90b980_0 .net/2u *"_ivl_18", 63 0, L_000002072b944460;  1 drivers
v000002072b90bc00_0 .net *"_ivl_2", 0 0, L_000002072b99fb70;  1 drivers
v000002072b90cd80_0 .net *"_ivl_20", 63 0, L_000002072b99fe90;  1 drivers
v000002072b90c2e0_0 .net *"_ivl_22", 6 0, L_000002072b99f7b0;  1 drivers
L_000002072b9444a8 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
v000002072b90c6a0_0 .net *"_ivl_25", 1 0, L_000002072b9444a8;  1 drivers
L_000002072b944388 .functor BUFT 1, C4<0000000000000000000000000000000000000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v000002072b90c100_0 .net/2u *"_ivl_4", 63 0, L_000002072b944388;  1 drivers
v000002072b90b480_0 .net *"_ivl_6", 63 0, L_000002072b99e9f0;  1 drivers
v000002072b90b5c0_0 .net *"_ivl_8", 6 0, L_000002072b99f2b0;  1 drivers
v000002072b90c1a0_0 .net "clk", 0 0, v000002072b942c30_0;  alias, 1 drivers
v000002072b90b7a0_0 .net "debug_output", 63 0, L_000002072b8a18e0;  alias, 1 drivers
v000002072b90ba20_0 .var/i "i", 31 0;
v000002072b90c600_0 .net "rd_addr1", 4 0, L_000002072b99e1d0;  alias, 1 drivers
v000002072b90b340_0 .net "rd_addr2", 4 0, L_000002072b99e8b0;  alias, 1 drivers
v000002072b90c060_0 .net "rd_data1", 63 0, L_000002072b99fa30;  alias, 1 drivers
v000002072b90c380_0 .net "rd_data2", 63 0, L_000002072b99ea90;  alias, 1 drivers
v000002072b90b160 .array "registers", 31 0, 63 0;
v000002072b90bf20_0 .net "rst", 0 0, v000002072b9429b0_0;  alias, 1 drivers
v000002072b90b200_0 .net "wr_addr", 4 0, L_000002072b99f8f0;  alias, 1 drivers
v000002072b90b8e0_0 .net "wr_data", 63 0, L_000002072b99ff30;  alias, 1 drivers
v000002072b90c880_0 .net "wr_enable", 0 0, v000002072b8c9220_0;  alias, 1 drivers
L_000002072b99fb70 .cmp/eq 5, L_000002072b99e1d0, L_000002072b944340;
L_000002072b99e9f0 .array/port v000002072b90b160, L_000002072b99f2b0;
L_000002072b99f2b0 .concat [ 5 2 0 0], L_000002072b99e1d0, L_000002072b9443d0;
L_000002072b99fa30 .functor MUXZ 64, L_000002072b99e9f0, L_000002072b944388, L_000002072b99fb70, C4<>;
L_000002072b99e950 .cmp/eq 5, L_000002072b99e8b0, L_000002072b944418;
L_000002072b99fe90 .array/port v000002072b90b160, L_000002072b99f7b0;
L_000002072b99f7b0 .concat [ 5 2 0 0], L_000002072b99e8b0, L_000002072b9444a8;
L_000002072b99ea90 .functor MUXZ 64, L_000002072b99fe90, L_000002072b944460, L_000002072b99e950, C4<>;
S_000002072b871b60 .scope module, "instr_mem_inst" "instr_mem" 4 44, 10 1 0, S_000002072b886f30;
 .timescale 0 0;
    .port_info 0 /INPUT 32 "address";
    .port_info 1 /OUTPUT 32 "instruction";
P_000002072b8b1e60 .param/str "mem_file" 0 10 3, "programs/fibo_comp.mem";
P_000002072b8b1e98 .param/l "mem_size" 0 10 2, +C4<00000000000000000000000000010001>;
v000002072b90cec0_0 .net *"_ivl_1", 29 0, L_000002072b942eb0;  1 drivers
v000002072b90cf60_0 .net *"_ivl_10", 31 0, L_000002072b9420f0;  1 drivers
L_000002072b944148 .functor BUFT 1, C4<00000000000000000000000000010011>, C4<0>, C4<0>, C4<0>;
v000002072b90b700_0 .net/2u *"_ivl_12", 31 0, L_000002072b944148;  1 drivers
L_000002072b9440b8 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
v000002072b90c740_0 .net *"_ivl_5", 1 0, L_000002072b9440b8;  1 drivers
L_000002072b944100 .functor BUFT 1, C4<00000000000000000000000000010001>, C4<0>, C4<0>, C4<0>;
v000002072b90c7e0_0 .net/2u *"_ivl_6", 31 0, L_000002072b944100;  1 drivers
v000002072b90c920_0 .net *"_ivl_8", 0 0, L_000002072b943f90;  1 drivers
v000002072b90c9c0_0 .net "address", 31 0, L_000002072b9431d0;  1 drivers
v000002072b90ca60_0 .var/i "i", 31 0;
v000002072b940220_0 .net "instruction", 31 0, L_000002072b943950;  alias, 1 drivers
v000002072b9405e0 .array "memory_array", 16 0, 31 0;
v000002072b940e00_0 .net "word_addr", 31 0, L_000002072b942f50;  1 drivers
L_000002072b942eb0 .part L_000002072b9431d0, 2, 30;
L_000002072b942f50 .concat [ 30 2 0 0], L_000002072b942eb0, L_000002072b9440b8;
L_000002072b943f90 .cmp/gt 32, L_000002072b944100, L_000002072b942f50;
L_000002072b9420f0 .array/port v000002072b9405e0, L_000002072b942f50;
L_000002072b943950 .functor MUXZ 32, L_000002072b944148, L_000002072b9420f0, L_000002072b943f90, C4<>;
S_000002072b871cf0 .scope module, "pc_inst" "pc_logic" 4 31, 11 1 0, S_000002072b886f30;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "rst";
    .port_info 2 /INPUT 1 "branch";
    .port_info 3 /INPUT 1 "zero";
    .port_info 4 /INPUT 64 "imm";
    .port_info 5 /OUTPUT 64 "pc";
L_000002072b8a1410 .functor AND 1, v000002072b8ca080_0, L_000002072b99ee50, C4<1>, C4<1>;
v000002072b9416c0_0 .net "branch", 0 0, v000002072b8ca080_0;  alias, 1 drivers
v000002072b940680_0 .net "clk", 0 0, v000002072b942c30_0;  alias, 1 drivers
v000002072b940c20_0 .net "imm", 63 0, L_000002072b943770;  alias, 1 drivers
v000002072b941440_0 .var "pc", 63 0;
v000002072b941760_0 .var "pc_next", 63 0;
v000002072b940a40_0 .net "rst", 0 0, v000002072b9429b0_0;  alias, 1 drivers
v000002072b9411c0_0 .net "take_branch", 0 0, L_000002072b8a1410;  1 drivers
v000002072b9407c0_0 .net "zero", 0 0, L_000002072b99ee50;  alias, 1 drivers
E_000002072b8d6ac0 .event posedge, v000002072b8ca4e0_0, v000002072b8c9900_0;
E_000002072b8d6f40 .event anyedge, v000002072b9411c0_0, v000002072b941440_0, v000002072b90ce20_0;
S_000002072b8692f0 .scope module, "sign_ext_inst" "sign_extend" 4 50, 12 3 0, S_000002072b886f30;
 .timescale 0 0;
    .port_info 0 /INPUT 32 "instr";
    .port_info 1 /OUTPUT 64 "imm_out";
v000002072b941a80_0 .net *"_ivl_1", 0 0, L_000002072b9439f0;  1 drivers
v000002072b941300_0 .net *"_ivl_10", 51 0, L_000002072b9434f0;  1 drivers
v000002072b9413a0_0 .net *"_ivl_13", 6 0, L_000002072b9425f0;  1 drivers
v000002072b9414e0_0 .net *"_ivl_15", 4 0, L_000002072b943c70;  1 drivers
v000002072b940cc0_0 .net *"_ivl_19", 0 0, L_000002072b943a90;  1 drivers
v000002072b940ae0_0 .net *"_ivl_2", 51 0, L_000002072b943270;  1 drivers
v000002072b940360_0 .net *"_ivl_20", 50 0, L_000002072b942730;  1 drivers
v000002072b941800_0 .net *"_ivl_23", 0 0, L_000002072b942870;  1 drivers
v000002072b941e40_0 .net *"_ivl_25", 0 0, L_000002072b943090;  1 drivers
v000002072b941b20_0 .net *"_ivl_27", 5 0, L_000002072b943810;  1 drivers
v000002072b941580_0 .net *"_ivl_29", 3 0, L_000002072b942230;  1 drivers
L_000002072b944190 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v000002072b9402c0_0 .net/2u *"_ivl_30", 0 0, L_000002072b944190;  1 drivers
v000002072b941620_0 .net *"_ivl_35", 6 0, L_000002072b9422d0;  1 drivers
L_000002072b9441d8 .functor BUFT 1, C4<0100011>, C4<0>, C4<0>, C4<0>;
v000002072b940180_0 .net/2u *"_ivl_36", 6 0, L_000002072b9441d8;  1 drivers
v000002072b940860_0 .net *"_ivl_38", 0 0, L_000002072b943130;  1 drivers
v000002072b941bc0_0 .net *"_ivl_41", 6 0, L_000002072b943bd0;  1 drivers
L_000002072b944220 .functor BUFT 1, C4<1100011>, C4<0>, C4<0>, C4<0>;
v000002072b940900_0 .net/2u *"_ivl_42", 6 0, L_000002072b944220;  1 drivers
v000002072b940d60_0 .net *"_ivl_44", 0 0, L_000002072b9436d0;  1 drivers
v000002072b9409a0_0 .net *"_ivl_46", 63 0, L_000002072b943310;  1 drivers
v000002072b941c60_0 .net *"_ivl_5", 11 0, L_000002072b9433b0;  1 drivers
v000002072b940b80_0 .net *"_ivl_9", 0 0, L_000002072b943450;  1 drivers
v000002072b940ea0_0 .net "imm_b", 63 0, L_000002072b943ef0;  1 drivers
v000002072b940f40_0 .net "imm_i", 63 0, L_000002072b942ff0;  1 drivers
v000002072b941d00_0 .net "imm_out", 63 0, L_000002072b943770;  alias, 1 drivers
v000002072b940fe0_0 .net "imm_s", 63 0, L_000002072b943590;  1 drivers
v000002072b940720_0 .net "instr", 31 0, L_000002072b943950;  alias, 1 drivers
L_000002072b9439f0 .part L_000002072b943950, 31, 1;
LS_000002072b943270_0_0 .concat [ 1 1 1 1], L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0;
LS_000002072b943270_0_4 .concat [ 1 1 1 1], L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0;
LS_000002072b943270_0_8 .concat [ 1 1 1 1], L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0;
LS_000002072b943270_0_12 .concat [ 1 1 1 1], L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0;
LS_000002072b943270_0_16 .concat [ 1 1 1 1], L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0;
LS_000002072b943270_0_20 .concat [ 1 1 1 1], L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0;
LS_000002072b943270_0_24 .concat [ 1 1 1 1], L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0;
LS_000002072b943270_0_28 .concat [ 1 1 1 1], L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0;
LS_000002072b943270_0_32 .concat [ 1 1 1 1], L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0;
LS_000002072b943270_0_36 .concat [ 1 1 1 1], L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0;
LS_000002072b943270_0_40 .concat [ 1 1 1 1], L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0;
LS_000002072b943270_0_44 .concat [ 1 1 1 1], L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0;
LS_000002072b943270_0_48 .concat [ 1 1 1 1], L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0, L_000002072b9439f0;
LS_000002072b943270_1_0 .concat [ 4 4 4 4], LS_000002072b943270_0_0, LS_000002072b943270_0_4, LS_000002072b943270_0_8, LS_000002072b943270_0_12;
LS_000002072b943270_1_4 .concat [ 4 4 4 4], LS_000002072b943270_0_16, LS_000002072b943270_0_20, LS_000002072b943270_0_24, LS_000002072b943270_0_28;
LS_000002072b943270_1_8 .concat [ 4 4 4 4], LS_000002072b943270_0_32, LS_000002072b943270_0_36, LS_000002072b943270_0_40, LS_000002072b943270_0_44;
LS_000002072b943270_1_12 .concat [ 4 0 0 0], LS_000002072b943270_0_48;
L_000002072b943270 .concat [ 16 16 16 4], LS_000002072b943270_1_0, LS_000002072b943270_1_4, LS_000002072b943270_1_8, LS_000002072b943270_1_12;
L_000002072b9433b0 .part L_000002072b943950, 20, 12;
L_000002072b942ff0 .concat [ 12 52 0 0], L_000002072b9433b0, L_000002072b943270;
L_000002072b943450 .part L_000002072b943950, 31, 1;
LS_000002072b9434f0_0_0 .concat [ 1 1 1 1], L_000002072b943450, L_000002072b943450, L_000002072b943450, L_000002072b943450;
LS_000002072b9434f0_0_4 .concat [ 1 1 1 1], L_000002072b943450, L_000002072b943450, L_000002072b943450, L_000002072b943450;
LS_000002072b9434f0_0_8 .concat [ 1 1 1 1], L_000002072b943450, L_000002072b943450, L_000002072b943450, L_000002072b943450;
LS_000002072b9434f0_0_12 .concat [ 1 1 1 1], L_000002072b943450, L_000002072b943450, L_000002072b943450, L_000002072b943450;
LS_000002072b9434f0_0_16 .concat [ 1 1 1 1], L_000002072b943450, L_000002072b943450, L_000002072b943450, L_000002072b943450;
LS_000002072b9434f0_0_20 .concat [ 1 1 1 1], L_000002072b943450, L_000002072b943450, L_000002072b943450, L_000002072b943450;
LS_000002072b9434f0_0_24 .concat [ 1 1 1 1], L_000002072b943450, L_000002072b943450, L_000002072b943450, L_000002072b943450;
LS_000002072b9434f0_0_28 .concat [ 1 1 1 1], L_000002072b943450, L_000002072b943450, L_000002072b943450, L_000002072b943450;
LS_000002072b9434f0_0_32 .concat [ 1 1 1 1], L_000002072b943450, L_000002072b943450, L_000002072b943450, L_000002072b943450;
LS_000002072b9434f0_0_36 .concat [ 1 1 1 1], L_000002072b943450, L_000002072b943450, L_000002072b943450, L_000002072b943450;
LS_000002072b9434f0_0_40 .concat [ 1 1 1 1], L_000002072b943450, L_000002072b943450, L_000002072b943450, L_000002072b943450;
LS_000002072b9434f0_0_44 .concat [ 1 1 1 1], L_000002072b943450, L_000002072b943450, L_000002072b943450, L_000002072b943450;
LS_000002072b9434f0_0_48 .concat [ 1 1 1 1], L_000002072b943450, L_000002072b943450, L_000002072b943450, L_000002072b943450;
LS_000002072b9434f0_1_0 .concat [ 4 4 4 4], LS_000002072b9434f0_0_0, LS_000002072b9434f0_0_4, LS_000002072b9434f0_0_8, LS_000002072b9434f0_0_12;
LS_000002072b9434f0_1_4 .concat [ 4 4 4 4], LS_000002072b9434f0_0_16, LS_000002072b9434f0_0_20, LS_000002072b9434f0_0_24, LS_000002072b9434f0_0_28;
LS_000002072b9434f0_1_8 .concat [ 4 4 4 4], LS_000002072b9434f0_0_32, LS_000002072b9434f0_0_36, LS_000002072b9434f0_0_40, LS_000002072b9434f0_0_44;
LS_000002072b9434f0_1_12 .concat [ 4 0 0 0], LS_000002072b9434f0_0_48;
L_000002072b9434f0 .concat [ 16 16 16 4], LS_000002072b9434f0_1_0, LS_000002072b9434f0_1_4, LS_000002072b9434f0_1_8, LS_000002072b9434f0_1_12;
L_000002072b9425f0 .part L_000002072b943950, 25, 7;
L_000002072b943c70 .part L_000002072b943950, 7, 5;
L_000002072b943590 .concat [ 5 7 52 0], L_000002072b943c70, L_000002072b9425f0, L_000002072b9434f0;
L_000002072b943a90 .part L_000002072b943950, 31, 1;
LS_000002072b942730_0_0 .concat [ 1 1 1 1], L_000002072b943a90, L_000002072b943a90, L_000002072b943a90, L_000002072b943a90;
LS_000002072b942730_0_4 .concat [ 1 1 1 1], L_000002072b943a90, L_000002072b943a90, L_000002072b943a90, L_000002072b943a90;
LS_000002072b942730_0_8 .concat [ 1 1 1 1], L_000002072b943a90, L_000002072b943a90, L_000002072b943a90, L_000002072b943a90;
LS_000002072b942730_0_12 .concat [ 1 1 1 1], L_000002072b943a90, L_000002072b943a90, L_000002072b943a90, L_000002072b943a90;
LS_000002072b942730_0_16 .concat [ 1 1 1 1], L_000002072b943a90, L_000002072b943a90, L_000002072b943a90, L_000002072b943a90;
LS_000002072b942730_0_20 .concat [ 1 1 1 1], L_000002072b943a90, L_000002072b943a90, L_000002072b943a90, L_000002072b943a90;
LS_000002072b942730_0_24 .concat [ 1 1 1 1], L_000002072b943a90, L_000002072b943a90, L_000002072b943a90, L_000002072b943a90;
LS_000002072b942730_0_28 .concat [ 1 1 1 1], L_000002072b943a90, L_000002072b943a90, L_000002072b943a90, L_000002072b943a90;
LS_000002072b942730_0_32 .concat [ 1 1 1 1], L_000002072b943a90, L_000002072b943a90, L_000002072b943a90, L_000002072b943a90;
LS_000002072b942730_0_36 .concat [ 1 1 1 1], L_000002072b943a90, L_000002072b943a90, L_000002072b943a90, L_000002072b943a90;
LS_000002072b942730_0_40 .concat [ 1 1 1 1], L_000002072b943a90, L_000002072b943a90, L_000002072b943a90, L_000002072b943a90;
LS_000002072b942730_0_44 .concat [ 1 1 1 1], L_000002072b943a90, L_000002072b943a90, L_000002072b943a90, L_000002072b943a90;
LS_000002072b942730_0_48 .concat [ 1 1 1 0], L_000002072b943a90, L_000002072b943a90, L_000002072b943a90;
LS_000002072b942730_1_0 .concat [ 4 4 4 4], LS_000002072b942730_0_0, LS_000002072b942730_0_4, LS_000002072b942730_0_8, LS_000002072b942730_0_12;
LS_000002072b942730_1_4 .concat [ 4 4 4 4], LS_000002072b942730_0_16, LS_000002072b942730_0_20, LS_000002072b942730_0_24, LS_000002072b942730_0_28;
LS_000002072b942730_1_8 .concat [ 4 4 4 4], LS_000002072b942730_0_32, LS_000002072b942730_0_36, LS_000002072b942730_0_40, LS_000002072b942730_0_44;
LS_000002072b942730_1_12 .concat [ 3 0 0 0], LS_000002072b942730_0_48;
L_000002072b942730 .concat [ 16 16 16 3], LS_000002072b942730_1_0, LS_000002072b942730_1_4, LS_000002072b942730_1_8, LS_000002072b942730_1_12;
L_000002072b942870 .part L_000002072b943950, 31, 1;
L_000002072b943090 .part L_000002072b943950, 7, 1;
L_000002072b943810 .part L_000002072b943950, 25, 6;
L_000002072b942230 .part L_000002072b943950, 8, 4;
LS_000002072b943ef0_0_0 .concat [ 1 4 6 1], L_000002072b944190, L_000002072b942230, L_000002072b943810, L_000002072b943090;
LS_000002072b943ef0_0_4 .concat [ 1 51 0 0], L_000002072b942870, L_000002072b942730;
L_000002072b943ef0 .concat [ 12 52 0 0], LS_000002072b943ef0_0_0, LS_000002072b943ef0_0_4;
L_000002072b9422d0 .part L_000002072b943950, 0, 7;
L_000002072b943130 .cmp/eq 7, L_000002072b9422d0, L_000002072b9441d8;
L_000002072b943bd0 .part L_000002072b943950, 0, 7;
L_000002072b9436d0 .cmp/eq 7, L_000002072b943bd0, L_000002072b944220;
L_000002072b943310 .functor MUXZ 64, L_000002072b942ff0, L_000002072b943ef0, L_000002072b9436d0, C4<>;
L_000002072b943770 .functor MUXZ 64, L_000002072b943310, L_000002072b943590, L_000002072b943130, C4<>;
    .scope S_000002072b871cf0;
T_1 ;
Ewait_0 .event/or E_000002072b8d6f40, E_0x0;
    %wait Ewait_0;
    %load/vec4 v000002072b9411c0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.0, 8;
    %load/vec4 v000002072b941440_0;
    %load/vec4 v000002072b940c20_0;
    %add;
    %store/vec4 v000002072b941760_0, 0, 64;
    %jmp T_1.1;
T_1.0 ;
    %load/vec4 v000002072b941440_0;
    %addi 4, 0, 64;
    %store/vec4 v000002072b941760_0, 0, 64;
T_1.1 ;
    %jmp T_1;
    .thread T_1, $push;
    .scope S_000002072b871cf0;
T_2 ;
    %wait E_000002072b8d6ac0;
    %load/vec4 v000002072b940a40_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.0, 8;
    %pushi/vec4 0, 0, 64;
    %assign/vec4 v000002072b941440_0, 0;
    %jmp T_2.1;
T_2.0 ;
    %load/vec4 v000002072b941760_0;
    %assign/vec4 v000002072b941440_0, 0;
T_2.1 ;
    %jmp T_2;
    .thread T_2;
    .scope S_000002072b871b60;
T_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002072b90ca60_0, 0, 32;
T_3.0 ;
    %load/vec4 v000002072b90ca60_0;
    %cmpi/s 17, 0, 32;
    %jmp/0xz T_3.1, 5;
    %pushi/vec4 19, 0, 32;
    %ix/getv/s 4, v000002072b90ca60_0;
    %store/vec4a v000002072b9405e0, 4, 0;
    %load/vec4 v000002072b90ca60_0;
    %addi 1, 0, 32;
    %store/vec4 v000002072b90ca60_0, 0, 32;
    %jmp T_3.0;
T_3.1 ;
    %vpi_call/w 10 21 "$display", "Loading instruction memory from %s", P_000002072b8b1e60 {0 0 0};
    %vpi_call/w 10 22 "$readmemh", P_000002072b8b1e60, v000002072b9405e0 {0 0 0};
    %vpi_call/w 10 25 "$display", "Loaded instructions:" {0 0 0};
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002072b90ca60_0, 0, 32;
T_3.2 ;
    %load/vec4 v000002072b90ca60_0;
    %cmpi/s 17, 0, 32;
    %flag_get/vec4 5;
    %jmp/0 T_3.4, 5;
    %load/vec4 v000002072b90ca60_0;
    %cmpi/s 20, 0, 32;
    %flag_get/vec4 5;
    %and;
T_3.4;
    %flag_set/vec4 8;
    %jmp/0xz T_3.3, 8;
    %ix/getv/s 4, v000002072b90ca60_0;
    %load/vec4a v000002072b9405e0, 4;
    %cmpi/ne 19, 0, 32;
    %jmp/0xz  T_3.5, 4;
    %vpi_call/w 10 28 "$display", "  [%0d]: 0x%h", v000002072b90ca60_0, &A<v000002072b9405e0, v000002072b90ca60_0 > {0 0 0};
T_3.5 ;
    %load/vec4 v000002072b90ca60_0;
    %addi 1, 0, 32;
    %store/vec4 v000002072b90ca60_0, 0, 32;
    %jmp T_3.2;
T_3.3 ;
    %end;
    .thread T_3;
    .scope S_000002072b8870c0;
T_4 ;
Ewait_1 .event/or E_000002072b8da580, E_0x0;
    %wait Ewait_1;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v000002072b8ca6c0_0, 0, 3;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8c9220_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8c9180_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8ca800_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8ca1c0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8c9040_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8ca080_0, 0, 1;
    %load/vec4 v000002072b8c9e00_0;
    %dup/vec4;
    %pushi/vec4 3, 0, 7;
    %cmp/u;
    %jmp/1 T_4.0, 6;
    %dup/vec4;
    %pushi/vec4 19, 0, 7;
    %cmp/u;
    %jmp/1 T_4.1, 6;
    %dup/vec4;
    %pushi/vec4 35, 0, 7;
    %cmp/u;
    %jmp/1 T_4.2, 6;
    %dup/vec4;
    %pushi/vec4 51, 0, 7;
    %cmp/u;
    %jmp/1 T_4.3, 6;
    %dup/vec4;
    %pushi/vec4 99, 0, 7;
    %cmp/u;
    %jmp/1 T_4.4, 6;
    %load/vec4 v000002072b8c9e00_0;
    %cmpi/ne 127, 127, 7;
    %jmp/0xz  T_4.7, 6;
    %vpi_call/w 5 93 "$display", "Warning: Unknown opcode: 0x%h", v000002072b8c9e00_0 {0 0 0};
T_4.7 ;
    %jmp T_4.6;
T_4.0 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v000002072b8ca6c0_0, 0, 3;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000002072b8c9220_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000002072b8c9180_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8ca800_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000002072b8ca1c0_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000002072b8c9040_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8ca080_0, 0, 1;
    %jmp T_4.6;
T_4.1 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v000002072b8ca6c0_0, 0, 3;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000002072b8c9220_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8c9180_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8ca800_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8ca1c0_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000002072b8c9040_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8ca080_0, 0, 1;
    %jmp T_4.6;
T_4.2 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v000002072b8ca6c0_0, 0, 3;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8c9220_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8c9180_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000002072b8ca800_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8ca1c0_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000002072b8c9040_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8ca080_0, 0, 1;
    %jmp T_4.6;
T_4.3 ;
    %load/vec4 v000002072b8c90e0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 3;
    %cmp/u;
    %jmp/1 T_4.9, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 3;
    %cmp/u;
    %jmp/1 T_4.10, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 3;
    %cmp/u;
    %jmp/1 T_4.11, 6;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v000002072b8ca6c0_0, 0, 3;
    %jmp T_4.13;
T_4.9 ;
    %load/vec4 v000002072b8ca760_0;
    %cmpi/e 32, 0, 7;
    %jmp/0xz  T_4.14, 4;
    %pushi/vec4 1, 0, 3;
    %store/vec4 v000002072b8ca6c0_0, 0, 3;
    %jmp T_4.15;
T_4.14 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v000002072b8ca6c0_0, 0, 3;
T_4.15 ;
    %jmp T_4.13;
T_4.10 ;
    %pushi/vec4 2, 0, 3;
    %store/vec4 v000002072b8ca6c0_0, 0, 3;
    %jmp T_4.13;
T_4.11 ;
    %pushi/vec4 3, 0, 3;
    %store/vec4 v000002072b8ca6c0_0, 0, 3;
    %jmp T_4.13;
T_4.13 ;
    %pop/vec4 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000002072b8c9220_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8c9180_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8ca800_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8ca1c0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8c9040_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8ca080_0, 0, 1;
    %jmp T_4.6;
T_4.4 ;
    %pushi/vec4 1, 0, 3;
    %store/vec4 v000002072b8ca6c0_0, 0, 3;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8c9220_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8c9180_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8ca800_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8ca1c0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b8c9040_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000002072b8ca080_0, 0, 1;
    %jmp T_4.6;
T_4.6 ;
    %pop/vec4 1;
    %jmp T_4;
    .thread T_4, $push;
    .scope S_000002072b87af10;
T_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002072b8caa80_0, 0, 32;
T_5.0 ;
    %load/vec4 v000002072b8caa80_0;
    %cmpi/s 256, 0, 32;
    %jmp/0xz T_5.1, 5;
    %pushi/vec4 0, 0, 64;
    %ix/getv/s 4, v000002072b8caa80_0;
    %store/vec4a v000002072b8c9400, 4, 0;
    %load/vec4 v000002072b8caa80_0;
    %addi 1, 0, 32;
    %store/vec4 v000002072b8caa80_0, 0, 32;
    %jmp T_5.0;
T_5.1 ;
    %vpi_call/w 6 30 "$display", "Loading data memory from %s", P_000002072b886cb8 {0 0 0};
    %vpi_call/w 6 31 "$readmemh", P_000002072b886cb8, v000002072b8c9400, 32'sb00000000000000000000000000000000, 32'sb00000000000000000000000000000001 {0 0 0};
    %vpi_call/w 6 34 "$display", "Loaded data memory:" {0 0 0};
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002072b8caa80_0, 0, 32;
T_5.2 ;
    %load/vec4 v000002072b8caa80_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_5.3, 5;
    %vpi_call/w 6 36 "$display", "  [%0d]: 0x%h (%0d)", v000002072b8caa80_0, &A<v000002072b8c9400, v000002072b8caa80_0 >, &A<v000002072b8c9400, v000002072b8caa80_0 > {0 0 0};
    %load/vec4 v000002072b8caa80_0;
    %addi 1, 0, 32;
    %store/vec4 v000002072b8caa80_0, 0, 32;
    %jmp T_5.2;
T_5.3 ;
    %end;
    .thread T_5;
    .scope S_000002072b87af10;
T_6 ;
    %wait E_000002072b8da740;
    %load/vec4 v000002072b8ca8a0_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_6.2, 9;
    %load/vec4 v000002072b8c9ae0_0;
    %cmpi/u 256, 0, 32;
    %flag_get/vec4 5;
    %and;
T_6.2;
    %flag_set/vec4 8;
    %jmp/0xz  T_6.0, 8;
    %load/vec4 v000002072b8c9ae0_0;
    %cmpi/u 2, 0, 32;
    %flag_inv 5; GE is !LT
    %jmp/0xz  T_6.3, 5;
    %load/vec4 v000002072b8c94a0_0;
    %ix/getv 3, v000002072b8c9ae0_0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v000002072b8c9400, 0, 4;
    %vpi_call/w 6 45 "$display", "MEM WRITE: addr=%0d, data=%0d", v000002072b8c9ae0_0, v000002072b8c94a0_0 {0 0 0};
    %jmp T_6.4;
T_6.3 ;
    %vpi_call/w 6 47 "$display", "WARNING: Attempted write to ROM region at address %0d", v000002072b8c9ae0_0 {0 0 0};
T_6.4 ;
T_6.0 ;
    %jmp T_6;
    .thread T_6;
    .scope S_000002072b877420;
T_7 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002072b90ba20_0, 0, 32;
T_7.0 ;
    %load/vec4 v000002072b90ba20_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_7.1, 5;
    %pushi/vec4 0, 0, 64;
    %ix/getv/s 4, v000002072b90ba20_0;
    %store/vec4a v000002072b90b160, 4, 0;
    %load/vec4 v000002072b90ba20_0;
    %addi 1, 0, 32;
    %store/vec4 v000002072b90ba20_0, 0, 32;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_000002072b877420;
T_8 ;
    %wait E_000002072b8da740;
    %load/vec4 v000002072b90bf20_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_8.0, 8;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002072b90ba20_0, 0, 32;
T_8.2 ;
    %load/vec4 v000002072b90ba20_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_8.3, 5;
    %pushi/vec4 0, 0, 64;
    %ix/getv/s 3, v000002072b90ba20_0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v000002072b90b160, 0, 4;
    %load/vec4 v000002072b90ba20_0;
    %addi 1, 0, 32;
    %store/vec4 v000002072b90ba20_0, 0, 32;
    %jmp T_8.2;
T_8.3 ;
    %jmp T_8.1;
T_8.0 ;
    %load/vec4 v000002072b90c880_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_8.6, 9;
    %load/vec4 v000002072b90b200_0;
    %pushi/vec4 0, 0, 5;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_8.6;
    %flag_set/vec4 8;
    %jmp/0xz  T_8.4, 8;
    %load/vec4 v000002072b90b8e0_0;
    %load/vec4 v000002072b90b200_0;
    %pad/u 7;
    %ix/vec4 3;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v000002072b90b160, 0, 4;
    %vpi_call/w 9 33 "$display", "REG WRITE: x%0d = %0d", v000002072b90b200_0, v000002072b90b8e0_0 {0 0 0};
T_8.4 ;
T_8.1 ;
    %jmp T_8;
    .thread T_8;
    .scope S_000002072b877290;
T_9 ;
Ewait_2 .event/or E_000002072b8da6c0, E_0x0;
    %wait Ewait_2;
    %load/vec4 v000002072b8c9b80_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 3;
    %cmp/u;
    %jmp/1 T_9.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 3;
    %cmp/u;
    %jmp/1 T_9.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 3;
    %cmp/u;
    %jmp/1 T_9.2, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 3;
    %cmp/u;
    %jmp/1 T_9.3, 6;
    %load/vec4 v000002072b8c9720_0;
    %load/vec4 v000002072b8c9c20_0;
    %add;
    %store/vec4 v000002072b8c9ea0_0, 0, 64;
    %jmp T_9.5;
T_9.0 ;
    %load/vec4 v000002072b8c9720_0;
    %load/vec4 v000002072b8c9c20_0;
    %add;
    %store/vec4 v000002072b8c9ea0_0, 0, 64;
    %jmp T_9.5;
T_9.1 ;
    %load/vec4 v000002072b8c9720_0;
    %load/vec4 v000002072b8c9c20_0;
    %sub;
    %store/vec4 v000002072b8c9ea0_0, 0, 64;
    %jmp T_9.5;
T_9.2 ;
    %load/vec4 v000002072b8c9720_0;
    %load/vec4 v000002072b8c9c20_0;
    %and;
    %store/vec4 v000002072b8c9ea0_0, 0, 64;
    %jmp T_9.5;
T_9.3 ;
    %load/vec4 v000002072b8c9720_0;
    %load/vec4 v000002072b8c9c20_0;
    %or;
    %store/vec4 v000002072b8c9ea0_0, 0, 64;
    %jmp T_9.5;
T_9.5 ;
    %pop/vec4 1;
    %jmp T_9;
    .thread T_9, $push;
    .scope S_000002072b8e0350;
T_10 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002072b942a50_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002072b942d70_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002072b942370_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002072b942410_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002072b942b90_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002072b943d10_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002072b942af0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002072b942550_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002072b942e10_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002072b942cd0_0, 0, 32;
    %end;
    .thread T_10, $init;
    .scope S_000002072b8e0350;
T_11 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b942c30_0, 0, 1;
    %end;
    .thread T_11;
    .scope S_000002072b8e0350;
T_12 ;
    %delay 5000, 0;
    %load/vec4 v000002072b942c30_0;
    %inv;
    %store/vec4 v000002072b942c30_0, 0, 1;
    %jmp T_12;
    .thread T_12;
    .scope S_000002072b8e0350;
T_13 ;
    %vpi_call/w 3 46 "$dumpfile", "fibo_comp.vcd" {0 0 0};
    %vpi_call/w 3 47 "$dumpvars", 32'sb00000000000000000000000000000000, S_000002072b8e0350 {0 0 0};
    %pushi/vec4 1, 0, 64;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v000002072b943b30, 4, 0;
    %pushi/vec4 1, 0, 64;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v000002072b943b30, 4, 0;
    %pushi/vec4 2, 0, 64;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v000002072b943b30, 4, 0;
    %pushi/vec4 3, 0, 64;
    %ix/load 4, 3, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v000002072b943b30, 4, 0;
    %pushi/vec4 5, 0, 64;
    %ix/load 4, 4, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v000002072b943b30, 4, 0;
    %pushi/vec4 8, 0, 64;
    %ix/load 4, 5, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v000002072b943b30, 4, 0;
    %pushi/vec4 13, 0, 64;
    %ix/load 4, 6, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v000002072b943b30, 4, 0;
    %pushi/vec4 21, 0, 64;
    %ix/load 4, 7, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v000002072b943b30, 4, 0;
    %pushi/vec4 34, 0, 64;
    %ix/load 4, 8, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v000002072b943b30, 4, 0;
    %pushi/vec4 55, 0, 64;
    %ix/load 4, 9, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v000002072b943b30, 4, 0;
    %vpi_call/w 3 62 "$display", "=== RISC-V Fibonacci Comprehensive Test ===" {0 0 0};
    %vpi_call/w 3 63 "$display", "Testing ALL instructions with Fibonacci sequence calculation\012" {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000002072b9429b0_0, 0, 1;
    %delay 20000, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002072b9429b0_0, 0, 1;
    %vpi_call/w 3 69 "$display", "Reset released, starting Fibonacci calculation...\012" {0 0 0};
    %delay 1000000, 0;
    %vpi_call/w 3 75 "$display", "=== FINAL RESULTS ===" {0 0 0};
    %vpi_call/w 3 76 "$display", "Debug output (Register 31): %0d", v000002072b9427d0_0 {0 0 0};
    %vpi_call/w 3 77 "$display", "Register 1 (Fib n-1): %0d", &A<v000002072b90b160, 1> {0 0 0};
    %vpi_call/w 3 78 "$display", "Register 2 (Fib n):   %0d", &A<v000002072b90b160, 2> {0 0 0};
    %vpi_call/w 3 79 "$display", "Register 3 (Fib n+1): %0d", &A<v000002072b90b160, 3> {0 0 0};
    %vpi_call/w 3 80 "$display", "Register 5 (index):   %0d\012", &A<v000002072b90b160, 5> {0 0 0};
    %vpi_call/w 3 83 "$display", "=== INSTRUCTION COVERAGE ===" {0 0 0};
    %vpi_call/w 3 84 "$display", "Total instructions: %0d", v000002072b942e10_0 {0 0 0};
    %vpi_call/w 3 85 "$display", " LD:   %0d", v000002072b942a50_0 {0 0 0};
    %vpi_call/w 3 86 "$display", " SD:   %0d", v000002072b942d70_0 {0 0 0};
    %vpi_call/w 3 87 "$display", " ADD:  %0d", v000002072b942370_0 {0 0 0};
    %vpi_call/w 3 88 "$display", " SUB:  %0d", v000002072b942410_0 {0 0 0};
    %vpi_call/w 3 89 "$display", " AND:  %0d", v000002072b942b90_0 {0 0 0};
    %vpi_call/w 3 90 "$display", " OR:   %0d", v000002072b943d10_0 {0 0 0};
    %vpi_call/w 3 91 "$display", " BEQ:  %0d", v000002072b942af0_0 {0 0 0};
    %vpi_call/w 3 92 "$display", " ADDI: %0d\012", v000002072b942550_0 {0 0 0};
    %load/vec4 v000002072b942a50_0;
    %cmpi/s 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %flag_get/vec4 5;
    %jmp/0 T_13.8, 5;
    %pushi/vec4 0, 0, 32;
    %load/vec4 v000002072b942d70_0;
    %cmp/s;
    %flag_get/vec4 5;
    %and;
T_13.8;
    %flag_set/vec4 14;
    %flag_get/vec4 14;
    %jmp/0 T_13.7, 14;
    %pushi/vec4 0, 0, 32;
    %load/vec4 v000002072b942370_0;
    %cmp/s;
    %flag_get/vec4 5;
    %and;
T_13.7;
    %flag_set/vec4 13;
    %flag_get/vec4 13;
    %jmp/0 T_13.6, 13;
    %pushi/vec4 0, 0, 32;
    %load/vec4 v000002072b942410_0;
    %cmp/s;
    %flag_get/vec4 5;
    %and;
T_13.6;
    %flag_set/vec4 12;
    %flag_get/vec4 12;
    %jmp/0 T_13.5, 12;
    %pushi/vec4 0, 0, 32;
    %load/vec4 v000002072b942b90_0;
    %cmp/s;
    %flag_get/vec4 5;
    %and;
T_13.5;
    %flag_set/vec4 11;
    %flag_get/vec4 11;
    %jmp/0 T_13.4, 11;
    %pushi/vec4 0, 0, 32;
    %load/vec4 v000002072b943d10_0;
    %cmp/s;
    %flag_get/vec4 5;
    %and;
T_13.4;
    %flag_set/vec4 10;
    %flag_get/vec4 10;
    %jmp/0 T_13.3, 10;
    %pushi/vec4 0, 0, 32;
    %load/vec4 v000002072b942af0_0;
    %cmp/s;
    %flag_get/vec4 5;
    %and;
T_13.3;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_13.2, 9;
    %pushi/vec4 0, 0, 32;
    %load/vec4 v000002072b942550_0;
    %cmp/s;
    %flag_get/vec4 5;
    %and;
T_13.2;
    %flag_set/vec4 8;
    %jmp/0xz  T_13.0, 8;
    %vpi_call/w 3 96 "$display", "\342\234\223 SUCCESS: All instruction types executed!\012" {0 0 0};
    %jmp T_13.1;
T_13.0 ;
    %vpi_call/w 3 98 "$display", "\342\234\227 FAILURE: Missing instruction executions!\012" {0 0 0};
T_13.1 ;
    %vpi_call/w 3 102 "$display", "=== FIBONACCI SEQUENCE IN MEMORY ===" {0 0 0};
    %fork t_1, S_000002072b8e04e0;
    %jmp t_0;
    .scope S_000002072b8e04e0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002072b8c8fa0_0, 0, 32;
T_13.9 ;
    %load/vec4 v000002072b8c8fa0_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_13.10, 5;
    %ix/getv/s 4, v000002072b8c8fa0_0;
    %load/vec4a v000002072b8c9400, 4;
    %store/vec4 v000002072b943db0_0, 0, 64;
    %load/vec4 v000002072b8c8fa0_0;
    %addi 1, 0, 32;
    %vpi_call/w 3 105 "$display", " Fib(%0d) = %0d", S<0,vec4,s32>, v000002072b943db0_0 {1 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002072b8c8fa0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000002072b8c8fa0_0, 0, 32;
    %jmp T_13.9;
T_13.10 ;
    %end;
    .scope S_000002072b8e0350;
t_0 %join;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002072b943630_0, 0, 32;
    %fork t_3, S_000002072b88b3f0;
    %jmp t_2;
    .scope S_000002072b88b3f0;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002072b8c9d60_0, 0, 32;
T_13.11 ;
    %load/vec4 v000002072b8c9d60_0;
    %pad/u 64;
    %ix/load 4, 5, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v000002072b90b160, 4;
    %cmp/u;
    %flag_get/vec4 5;
    %jmp/0 T_13.13, 5;
    %load/vec4 v000002072b8c9d60_0;
    %cmpi/s 10, 0, 32;
    %flag_get/vec4 5;
    %and;
T_13.13;
    %flag_set/vec4 8;
    %jmp/0xz T_13.12, 8;
    %ix/getv/s 4, v000002072b8c9d60_0;
    %load/vec4a v000002072b8c9400, 4;
    %ix/getv/s 4, v000002072b8c9d60_0;
    %load/vec4a v000002072b943b30, 4;
    %cmp/e;
    %jmp/0xz  T_13.14, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002072b943630_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000002072b943630_0, 0, 32;
T_13.14 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002072b8c9d60_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000002072b8c9d60_0, 0, 32;
    %jmp T_13.11;
T_13.12 ;
    %end;
    .scope S_000002072b8e0350;
t_2 %join;
    %vpi_call/w 3 115 "$display", "\012Verification: %0d/%0d correct values", v000002072b943630_0, &A<v000002072b90b160, 5> {0 0 0};
    %load/vec4 v000002072b943630_0;
    %cmpi/s 5, 0, 32;
    %flag_inv 5; GE is !LT
    %jmp/0xz  T_13.16, 5;
    %vpi_call/w 3 117 "$display", "\342\234\223 Fibonacci calculation is working correctly!" {0 0 0};
    %jmp T_13.17;
T_13.16 ;
    %vpi_call/w 3 119 "$display", "\342\234\227 Fibonacci calculation has errors" {0 0 0};
T_13.17 ;
    %vpi_call/w 3 122 "$finish" {0 0 0};
    %end;
    .thread T_13;
    .scope S_000002072b8e0350;
T_14 ;
    %wait E_000002072b8da740;
    %load/vec4 v000002072b9429b0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_14.0, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002072b942cd0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000002072b942cd0_0, 0, 32;
    %load/vec4 v000002072b940400_0;
    %parti/s 7, 0, 2;
    %dup/vec4;
    %pushi/vec4 3, 0, 7;
    %cmp/u;
    %jmp/1 T_14.2, 6;
    %dup/vec4;
    %pushi/vec4 35, 0, 7;
    %cmp/u;
    %jmp/1 T_14.3, 6;
    %dup/vec4;
    %pushi/vec4 51, 0, 7;
    %cmp/u;
    %jmp/1 T_14.4, 6;
    %dup/vec4;
    %pushi/vec4 99, 0, 7;
    %cmp/u;
    %jmp/1 T_14.5, 6;
    %dup/vec4;
    %pushi/vec4 19, 0, 7;
    %cmp/u;
    %jmp/1 T_14.6, 6;
    %jmp T_14.7;
T_14.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002072b942a50_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000002072b942a50_0, 0, 32;
    %jmp T_14.7;
T_14.3 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002072b942d70_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000002072b942d70_0, 0, 32;
    %jmp T_14.7;
T_14.4 ;
    %load/vec4 v000002072b940400_0;
    %parti/s 3, 12, 5;
    %dup/vec4;
    %pushi/vec4 0, 0, 3;
    %cmp/u;
    %jmp/1 T_14.8, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 3;
    %cmp/u;
    %jmp/1 T_14.9, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 3;
    %cmp/u;
    %jmp/1 T_14.10, 6;
    %jmp T_14.11;
T_14.8 ;
    %load/vec4 v000002072b940400_0;
    %parti/s 1, 30, 6;
    %flag_set/vec4 8;
    %jmp/0xz  T_14.12, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002072b942410_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000002072b942410_0, 0, 32;
    %jmp T_14.13;
T_14.12 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002072b942370_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000002072b942370_0, 0, 32;
T_14.13 ;
    %jmp T_14.11;
T_14.9 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002072b942b90_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000002072b942b90_0, 0, 32;
    %jmp T_14.11;
T_14.10 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002072b943d10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000002072b943d10_0, 0, 32;
    %jmp T_14.11;
T_14.11 ;
    %pop/vec4 1;
    %jmp T_14.7;
T_14.5 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002072b942af0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000002072b942af0_0, 0, 32;
    %jmp T_14.7;
T_14.6 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002072b942550_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000002072b942550_0, 0, 32;
    %jmp T_14.7;
T_14.7 ;
    %pop/vec4 1;
    %load/vec4 v000002072b940400_0;
    %cmpi/ne 19, 0, 32;
    %jmp/0xz  T_14.14, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002072b942e10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000002072b942e10_0, 0, 32;
    %load/vec4 v000002072b942cd0_0;
    %cmpi/s 20, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz  T_14.16, 5;
    %load/vec4 v000002072b940400_0;
    %store/vec4 v000002072b8cabc0_0, 0, 32;
    %callf/str TD_tb_fibonacci_comprehensive.get_instr_type, S_000002072b88b580;
    %vpi_call/w 3 146 "$display", "CYCLE %0d | PC: 0x%02h | Instr: 0x%h | Type: %s | R1: %0d | R2: %0d | R3: %0d | R5: %0d | R31: %0d", v000002072b942cd0_0, &PV<v000002072b9404a0_0, 0, 8>, v000002072b940400_0, S<0,str>, &A<v000002072b90b160, 1>, &A<v000002072b90b160, 2>, &A<v000002072b90b160, 3>, &A<v000002072b90b160, 5>, &A<v000002072b90b160, 31> {0 0 1};
T_14.16 ;
T_14.14 ;
    %load/vec4 v000002072b942cd0_0;
    %pushi/vec4 20, 0, 32;
    %mod/s;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_14.18, 4;
    %vpi_call/w 3 160 "$display", "--- Cycle %0d: computed %0d fib numbers ---", v000002072b942cd0_0, &A<v000002072b90b160, 5> {0 0 0};
T_14.18 ;
    %load/vec4 v000002072b942cd0_0;
    %cmpi/s 200, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %jmp/0xz  T_14.20, 5;
    %vpi_call/w 3 164 "$display", "Stopping simulation after 200 cycles" {0 0 0};
    %vpi_call/w 3 165 "$finish" {0 0 0};
T_14.20 ;
T_14.0 ;
    %jmp T_14;
    .thread T_14;
# The file index is used to find the file name in the following table.
:file_names 13;
    "N/A";
    "<interactive>";
    "-";
    "testbench/fibo_tb.sv";
    "src/single_cycle_cpu.sv";
    "src/control_unit.sv";
    "src/data_mem.sv";
    "src/data_path.sv";
    "src/alu.sv";
    "src/reg_file.sv";
    "src/instr_mem.sv";
    "src/pc_logic.sv";
    "src/sign_extend.sv";
