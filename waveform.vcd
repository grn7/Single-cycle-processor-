$date
	Fri Jun 06 11:32:12 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_single_cycle_cpu $end
$var wire 64 ! debug_out [63:0] $end
$var reg 1 " clk $end
$var reg 1 # rst $end
$scope module uut $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 1 $ zero $end
$var wire 64 % write_data_memory [63:0] $end
$var wire 1 & reg_write $end
$var wire 64 ' read_data_memory [63:0] $end
$var wire 5 ( rd_addr [4:0] $end
$var wire 64 ) pc [63:0] $end
$var wire 1 * mem_write $end
$var wire 1 + mem_to_reg $end
$var wire 1 , mem_read $end
$var wire 32 - instruction [31:0] $end
$var wire 64 . imm [63:0] $end
$var wire 64 / debug_out [63:0] $end
$var wire 1 0 branch $end
$var wire 1 1 alu_src $end
$var wire 64 2 alu_result [63:0] $end
$var wire 3 3 alu_control [2:0] $end
$scope module cu_inst $end
$var wire 3 4 funct3 [2:0] $end
$var wire 7 5 funct7 [6:0] $end
$var wire 7 6 opcode [6:0] $end
$var reg 3 7 alu_control [2:0] $end
$var reg 1 1 alu_src $end
$var reg 1 0 branch $end
$var reg 1 , mem_read $end
$var reg 1 + mem_to_reg $end
$var reg 1 * mem_write $end
$var reg 1 & reg_write $end
$upscope $end
$scope module data_mem_inst $end
$var wire 32 8 addr [31:0] $end
$var wire 1 " clk $end
$var wire 1 , rd_enable $end
$var wire 1 # rst $end
$var wire 1 * wr_enable $end
$var wire 64 9 wr_data [63:0] $end
$var parameter 32 : mem_size $end
$var parameter 136 ; rom_file $end
$var parameter 32 < rom_size $end
$var reg 64 = rd_data [63:0] $end
$var reg 32 > word_addr [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 ? i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 @ i [31:0] $end
$upscope $end
$upscope $end
$scope module dp_inst $end
$var wire 3 A alu_control [2:0] $end
$var wire 1 1 alu_src $end
$var wire 1 " clk $end
$var wire 1 + mem_to_reg $end
$var wire 64 B read_data_memory [63:0] $end
$var wire 1 & reg_write $end
$var wire 1 # rst $end
$var wire 64 C write_data_memory [63:0] $end
$var wire 1 $ zero $end
$var wire 64 D wb_data [63:0] $end
$var wire 64 E rs2_data [63:0] $end
$var wire 64 F rs1_data [63:0] $end
$var wire 5 G rd_addr [4:0] $end
$var wire 32 H instruction [31:0] $end
$var wire 64 I imm [63:0] $end
$var wire 64 J debug_out [63:0] $end
$var wire 64 K alu_result [63:0] $end
$var wire 64 L alu_b [63:0] $end
$var reg 5 M rs1 [4:0] $end
$var reg 5 N rs2 [4:0] $end
$scope module alu_inst $end
$var wire 3 O alu_control [2:0] $end
$var wire 64 P b [63:0] $end
$var wire 1 $ zero $end
$var wire 64 Q a [63:0] $end
$var reg 64 R result [63:0] $end
$upscope $end
$scope module rf $end
$var wire 1 " clk $end
$var wire 64 S debug_output [63:0] $end
$var wire 5 T rd_addr1 [4:0] $end
$var wire 5 U rd_addr2 [4:0] $end
$var wire 64 V rd_data1 [63:0] $end
$var wire 64 W rd_data2 [63:0] $end
$var wire 1 # rst $end
$var wire 5 X wr_addr [4:0] $end
$var wire 64 Y wr_data [63:0] $end
$var wire 1 & wr_enable $end
$scope begin $ivl_for_loop3 $end
$var integer 32 Z i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module instr_mem_inst $end
$var wire 32 [ address [31:0] $end
$var wire 32 \ instruction [31:0] $end
$var parameter 160 ] mem_file $end
$var parameter 32 ^ mem_size $end
$scope begin $ivl_for_loop2 $end
$var integer 32 _ i [31:0] $end
$upscope $end
$upscope $end
$scope module pc_inst $end
$var wire 1 0 branch $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 1 $ zero $end
$var wire 64 ` imm [63:0] $end
$var reg 64 a pc [63:0] $end
$upscope $end
$scope module sign_ext_inst $end
$var wire 32 b instr [31:0] $end
$var wire 64 c imm_out [63:0] $end
$var reg 64 d imm_b [63:0] $end
$var reg 64 e imm_i [63:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b110 ^
b111000001110010011011110110011101110010011000010110110101110011001011110111000001110010011011110110011101110010011000010110110100101110011011010110010101101101 ]
b100 <
b111000001110010011011110110011101110010011000010110110101110011001011110110010001100001011101000110000100101110011011010110010101101101 ;
b100000000 :
$end
#0
$dumpvars
bz e
bz0 d
bz c
b1000000000110011 b
b0 a
bz `
b110 _
b1000000000110011 \
b0 [
b100000 Z
bx Y
b0 X
bx W
bx V
bz U
bz T
b0 S
bx R
bx Q
bx P
b0 O
bz N
bz M
bx L
bx K
b0 J
b0 I
b1000000000110011 H
b0 G
bx F
bx E
bx D
bx C
b0 B
b0 A
b100000000 @
b100000000 ?
b0zzzzzzzzzzzzzzzzzzzzzzzzzzzzz >
b0 =
bx 9
bx 8
b0 7
b110011 6
b0 5
b0 4
b0 3
bx 2
01
00
b1000000000110011 /
bz .
b1000000000110011 -
0,
0+
0*
b0 )
b0 (
b0 '
1&
bx %
x$
1#
0"
b1000000000110011 !
$end
#5000
b100000 Z
b100000000 @
1"
#10000
0"
#15000
b1 I
b1 (
b1 G
b1 X
b100001000000010110011 -
b100001000000010110011 H
b100001000000010110011 \
b100001000000010110011 b
b10000000000000100001000000010110011 !
b10000000000000100001000000010110011 /
b100 [
b100 )
b100 a
1"
0#
#20000
0"
#25000
b10 I
b10 (
b10 G
b10 X
b1000001000000100110011 -
b1000001000000100110011 H
b1000001000000100110011 \
b1000001000000100110011 b
b100000000000001000001000000100110011 !
b100000000000001000001000000100110011 /
b1000 [
b1000 )
b1000 a
1"
#30000
0"
#35000
b11 I
b101 (
b101 G
b101 X
b1100010000001010110011 -
b1100010000001010110011 H
b1100010000001010110011 \
b1100010000001010110011 b
b110000000000001100010000001010110011 !
b110000000000001100010000001010110011 /
b1100 [
b1100 )
b1100 a
1"
#40000
0"
#45000
b100 L
b100 P
bx '
bx =
bx B
11
1+
1,
1&
b100 I
b110 (
b110 G
b110 X
b10 4
b11 6
b10000101010001100000011 -
b10000101010001100000011 H
b10000101010001100000011 \
b10000101010001100000011 b
b1000000000000010000101010001100000011 !
b1000000000000010000101010001100000011 /
b10000 [
b10000 )
b10000 a
1"
#50000
0"
#55000
b0 '
b0 =
b0 B
b101 L
b101 P
1*
11
0+
0,
0&
b101 I
b0 (
b0 G
b0 X
b11 4
b100011 6
b10100101011000000100011 -
b10100101011000000100011 H
b10100101011000000100011 \
b10100101011000000100011 b
b1010000000000010100101011000000100011 !
b1010000000000010100101011000000100011 /
b10100 [
b10100 )
b10100 a
1"
#60000
0"
#65000
bx L
bx P
1&
01
0*
b0 I
b0 4
b110011 6
b110011 -
b110011 H
b110011 \
b110011 b
b1100000000000000000000000000000110011 !
b1100000000000000000000000000000110011 /
b11000 [
b11000 )
b11000 a
1"
#70000
0"
#75000
b1110000000000000000000000000000110011 !
b1110000000000000000000000000000110011 /
b11100 [
b11100 )
b11100 a
1"
#80000
0"
#85000
b10000000000000000000000000000000110011 !
b10000000000000000000000000000000110011 /
b100000 [
b100000 )
b100000 a
1"
#90000
0"
#95000
b10010000000000000000000000000000110011 !
b10010000000000000000000000000000110011 /
b100100 [
b100100 )
b100100 a
1"
#100000
0"
#105000
b10100000000000000000000000000000110011 !
b10100000000000000000000000000000110011 /
b101000 [
b101000 )
b101000 a
1"
#110000
0"
#115000
b10110000000000000000000000000000110011 !
b10110000000000000000000000000000110011 /
b101100 [
b101100 )
b101100 a
1"
#120000
0"
#125000
b11000000000000000000000000000000110011 !
b11000000000000000000000000000000110011 /
b110000 [
b110000 )
b110000 a
1"
#130000
0"
#135000
b11010000000000000000000000000000110011 !
b11010000000000000000000000000000110011 /
b110100 [
b110100 )
b110100 a
1"
#140000
0"
#145000
b11100000000000000000000000000000110011 !
b11100000000000000000000000000000110011 /
b111000 [
b111000 )
b111000 a
1"
#150000
0"
#155000
b11110000000000000000000000000000110011 !
b11110000000000000000000000000000110011 /
b111100 [
b111100 )
b111100 a
1"
#160000
0"
#165000
b100000000000000000000000000000000110011 !
b100000000000000000000000000000000110011 /
b1000000 [
b1000000 )
b1000000 a
1"
#170000
0"
#175000
b100010000000000000000000000000000110011 !
b100010000000000000000000000000000110011 /
b1000100 [
b1000100 )
b1000100 a
1"
#180000
0"
#185000
b100100000000000000000000000000000110011 !
b100100000000000000000000000000000110011 /
b1001000 [
b1001000 )
b1001000 a
1"
#190000
0"
#195000
b100110000000000000000000000000000110011 !
b100110000000000000000000000000000110011 /
b1001100 [
b1001100 )
b1001100 a
1"
#200000
0"
#205000
b101000000000000000000000000000000110011 !
b101000000000000000000000000000000110011 /
b1010000 [
b1010000 )
b1010000 a
1"
#210000
0"
#215000
b101010000000000000000000000000000110011 !
b101010000000000000000000000000000110011 /
b1010100 [
b1010100 )
b1010100 a
1"
#220000
0"
#225000
b101100000000000000000000000000000110011 !
b101100000000000000000000000000000110011 /
b1011000 [
b1011000 )
b1011000 a
1"
#230000
0"
#235000
b101110000000000000000000000000000110011 !
b101110000000000000000000000000000110011 /
b1011100 [
b1011100 )
b1011100 a
1"
#240000
0"
#245000
b110000000000000000000000000000000110011 !
b110000000000000000000000000000000110011 /
b1100000 [
b1100000 )
b1100000 a
1"
#250000
0"
#255000
b110010000000000000000000000000000110011 !
b110010000000000000000000000000000110011 /
b1100100 [
b1100100 )
b1100100 a
1"
#260000
0"
#265000
b110100000000000000000000000000000110011 !
b110100000000000000000000000000000110011 /
b1101000 [
b1101000 )
b1101000 a
1"
#270000
0"
#275000
b110110000000000000000000000000000110011 !
b110110000000000000000000000000000110011 /
b1101100 [
b1101100 )
b1101100 a
1"
#280000
0"
#285000
b111000000000000000000000000000000110011 !
b111000000000000000000000000000000110011 /
b1110000 [
b1110000 )
b1110000 a
1"
#290000
0"
#295000
b111010000000000000000000000000000110011 !
b111010000000000000000000000000000110011 /
b1110100 [
b1110100 )
b1110100 a
1"
#300000
0"
#305000
b111100000000000000000000000000000110011 !
b111100000000000000000000000000000110011 /
b1111000 [
b1111000 )
b1111000 a
1"
#310000
0"
#315000
b111110000000000000000000000000000110011 !
b111110000000000000000000000000000110011 /
b1111100 [
b1111100 )
b1111100 a
1"
#320000
0"
#325000
b1000000000000000000000000000000000110011 !
b1000000000000000000000000000000000110011 /
b10000000 [
b10000000 )
b10000000 a
1"
#330000
0"
#335000
b1000010000000000000000000000000000110011 !
b1000010000000000000000000000000000110011 /
b10000100 [
b10000100 )
b10000100 a
1"
#340000
0"
#345000
b1000100000000000000000000000000000110011 !
b1000100000000000000000000000000000110011 /
b10001000 [
b10001000 )
b10001000 a
1"
#350000
0"
#355000
b1000110000000000000000000000000000110011 !
b1000110000000000000000000000000000110011 /
b10001100 [
b10001100 )
b10001100 a
1"
#360000
0"
#365000
b1001000000000000000000000000000000110011 !
b1001000000000000000000000000000000110011 /
b10010000 [
b10010000 )
b10010000 a
1"
#370000
0"
#375000
b1001010000000000000000000000000000110011 !
b1001010000000000000000000000000000110011 /
b10010100 [
b10010100 )
b10010100 a
1"
#380000
0"
#385000
b1001100000000000000000000000000000110011 !
b1001100000000000000000000000000000110011 /
b10011000 [
b10011000 )
b10011000 a
1"
#390000
0"
#395000
b1001110000000000000000000000000000110011 !
b1001110000000000000000000000000000110011 /
b10011100 [
b10011100 )
b10011100 a
1"
#400000
0"
#405000
b1010000000000000000000000000000000110011 !
b1010000000000000000000000000000000110011 /
b10100000 [
b10100000 )
b10100000 a
1"
#410000
0"
#415000
b1010010000000000000000000000000000110011 !
b1010010000000000000000000000000000110011 /
b10100100 [
b10100100 )
b10100100 a
1"
#420000
0"
#425000
b1010100000000000000000000000000000110011 !
b1010100000000000000000000000000000110011 /
b10101000 [
b10101000 )
b10101000 a
1"
#430000
0"
#435000
b1010110000000000000000000000000000110011 !
b1010110000000000000000000000000000110011 /
b10101100 [
b10101100 )
b10101100 a
1"
#440000
0"
#445000
b1011000000000000000000000000000000110011 !
b1011000000000000000000000000000000110011 /
b10110000 [
b10110000 )
b10110000 a
1"
#450000
0"
#455000
b1011010000000000000000000000000000110011 !
b1011010000000000000000000000000000110011 /
b10110100 [
b10110100 )
b10110100 a
1"
#460000
0"
#465000
b1011100000000000000000000000000000110011 !
b1011100000000000000000000000000000110011 /
b10111000 [
b10111000 )
b10111000 a
1"
#470000
0"
#475000
b1011110000000000000000000000000000110011 !
b1011110000000000000000000000000000110011 /
b10111100 [
b10111100 )
b10111100 a
1"
#480000
0"
#485000
b1100000000000000000000000000000000110011 !
b1100000000000000000000000000000000110011 /
b11000000 [
b11000000 )
b11000000 a
1"
#490000
0"
#495000
b1100010000000000000000000000000000110011 !
b1100010000000000000000000000000000110011 /
b11000100 [
b11000100 )
b11000100 a
1"
#500000
0"
#505000
b1100100000000000000000000000000000110011 !
b1100100000000000000000000000000000110011 /
b11001000 [
b11001000 )
b11001000 a
1"
#510000
0"
#515000
b1100110000000000000000000000000000110011 !
b1100110000000000000000000000000000110011 /
b11001100 [
b11001100 )
b11001100 a
1"
